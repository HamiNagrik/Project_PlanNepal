let activeDropdown = null;

// Language translations object
const translations = {
    english: {
        'page-title': 'Hami-Nepali | Plan Nepal -Hamro Nepal',
        'login-title': 'Login',
        'login-button': 'Login',
        'register-title': 'Register',
        'register-button': 'Register',
        'social-login-title': 'Social Login',
        'google-login': 'Login with Google',
        'facebook-login': 'Login with Facebook',
        'nav-home': 'ЁЯЗ│ЁЯЗ╡ My Nepal ЁЯЗ│ЁЯЗ╡',
        'nav-beauty': 'ЁЯМИ Beauty on Eye',
        'nav-positivity': 'ЁЯЗ│ЁЯЗ╡ Nepal\'s Positivity ЁЯМ╕',
        'nav-hope': 'ЁЯХКя╕П But Hope Remains',
        'nav-youth': 'ЁЯСйтАНЁЯОУ Educated & Skilled Youth',
        'nav-plan': 'ЁЯОп My Plan',
        'nav-education': 'ЁЯУЪ Education Plan',
        'nav-jobs': 'Jobs Available',
        'nav-homes': 'ЁЯПа Housing and Education',
        'nav-child-protection': 'Child Protection & Education',
        'nav-corruption': 'Corruption',
        'nav-corruption-how': 'ЁЯЗ│ЁЯЗ╡ How Nepal Became a Corrupt Nation? ЁЯХ│я╕П',
        'nav-corruption-wealth': 'ЁЯЪл Leaders\' Wealth',
        'nav-corruption-stop': 'ЁЯЪл End Corruption',
        'nav-health': 'Healthcare Services ЁЯй║',
        'nav-food': 'Food Security',
        'nav-stop-corruption': 'ЁЯЪл Control Corruption',
        'nav-contact': 'Contact',
        'hero-title': 'Welcome to Nepal - The Land of Himalayas',
        'hero-subtitle': 'Discover the rich tapestry of Nepal\'s 3000-year history, from the ancient Kirat dynasty to the modern federal democratic republic. Home to Mount Everest, birthplace of Buddha, and a melting pot of diverse cultures, traditions, and natural wonders.',
        'nepal-title': 'Nepal: Nature\'s Precious Gift',
        'nepal-subtitle': 'Rich in Mountains, Rivers, Forests, and Biodiversity - Nepal\'s Natural Resources',
        'sector-nature': '1. Mountains and Natural Beauty',
        'stat-peaks': 'Himalayan Peaks',
        'stat-peaks-desc': 'Above 8,000 meters',
        'stat-parks': 'National Parks',
        'stat-parks-desc': 'Protected Areas',
        'stat-biodiversity': 'Biodiversity',
        'stat-biodiversity-desc': 'Plant Species',
        'nature-description': 'Nepal is nature\'s precious gift. Its mountains, rivers, forests, and biodiversity are unique worldwide. Sagarmatha (Everest) is the world\'s highest peak, which has enhanced Nepal\'s glory.',
        'nature-progress': '100% Natural Resources',
        'nature-features': 'Natural Features',
        'nature-feature-1': 'Himalayan Mountain Range: Sagarmatha, Kanchenjunga, Dhaulagiri, Annapurna',
        'nature-feature-2': 'Sacred Lakes: Tilicho, Rara, Phewa, Begnas',
        'nature-feature-3': 'World Heritage Sites: Lumbini, Chitwan National Park, Kathmandu Valley',
        'nature-feature-4': 'Diverse Climate: From Tropical to Himalayan Regions',
        'nature-feature-5': 'World-Famous Trekking Routes',
        'nature-special': 'Special Natural Features',
        'nature-special-1': 'Kali Gandaki Gorge: World\'s Deepest Gorge',
        'nature-special-2': 'Rara Lake: Nepal\'s Largest Lake',
        'nature-special-3': 'Mustang: Living Museum of Ancient Tibetan Culture',
        'nature-special-4': 'Annapurna Conservation Area: World\'s Most Visited Trekking Area',
        'footer-title': 'MERO NEPAL',
        'footer-quote': '"Natural resources are Nepal\'s invaluable assets тАФ conservation and wise use is the path to prosperity." ЁЯЗ│ЁЯЗ╡',
        'footer-description': 'Nepal is a beautiful country rich in natural resources. Mountains, rivers, forests, minerals, water resources, wildlife, and biodiversity are Nepal\'s most important assets.',
        'footer-design': 'Designed with тЭдя╕П by Subash',
        'footer-copyright': ' News--War. All rights reserved.',
        'nepal-hope-title': '1. Direction of Nepal\'s Hope and Future',
        'nepal-opportunities-title': '2. Development Opportunities',
        'nepal-education-title': '3. Education and Capacity Building',
        'nepal-health-title': '4. Healthcare and Wellness',
        'nepal-culture-title': '5. Cultural Heritage and Tourism'
    },
    nepali: {
        'page-title': 'рдореЗрд░реЛ рдиреЗрдкрд╛рд▓ рдиреЗрдкрд╛рд▓ рдпреЛрдЬрдирд╛',
        'login-title': 'рд▓рдЧ рдЗрди',
        'login-button': 'рд▓рдЧ рдЗрди',
        'register-title': 'рджрд░реНрддрд╛',
        'register-button': 'рджрд░реНрддрд╛',
        'social-login-title': 'рд╕рд╛рдорд╛рдЬрд┐рдХ рд▓рдЧ рдЗрди',
        'google-login': 'рдЧреБрдЧрд▓рдмрд╛рдЯ рд▓рдЧ рдЗрди',
        'facebook-login': 'рдлреЗрд╕рдмреБрдХрдмрд╛рдЯ рд▓рдЧ рдЗрди',
        'nav-home': 'ЁЯЗ│ЁЯЗ╡ рдореЗрд░реЛ рдиреЗрдкрд╛рд▓ ЁЯЗ│ЁЯЗ╡',
        'nav-beauty': 'ЁЯМИ рд╕реМрдиреНрджрд░реНрдп рдЖрдБрдЦрд╛рд▓реЗ рджреЗрдЦрд┐рдиреНрдЫ',
        'nav-positivity': 'ЁЯЗ│ЁЯЗ╡ рдиреЗрдкрд╛рд▓рдХреЛ рд╕рдХрд╛рд░рд╛рддреНрдордХрддрд╛ ЁЯМ╕',
        'nav-hope': 'ЁЯХКя╕П рддрд░ рдЖрд╢рд╛ рдмрд╛рдБрдХреА рдЫ',
        'nav-youth': 'ЁЯСйтАНЁЯОУ рд╢рд┐рдХреНрд╖рд┐рдд рд░ рд╕реАрдкрдпреБрдХреНрдд рдпреБрд╡рд╛ рдкреБрд╕реНрддрд╛',
        'nav-plan': 'ЁЯОп рдореЗрд░реЛ рдпреЛрдЬрдирд╛',
        'nav-education': 'ЁЯУЪ рд╢рд┐рдХреНрд╖рд╛ рдпреЛрдЬрдирд╛',
        'nav-jobs': 'рд░реЛрдЬрдЧрд╛рд░реА рдЙрдкрд▓рдмреНрдз',
        'nav-homes': 'ЁЯПа рдЖрд╡рд╛рд╕ (рдШрд░) рд░ рд╢рд┐рдХреНрд╖рд╛ (рд╢реИрдХреНрд╖рд┐рдХ рд╕реБрд╡рд┐рдзрд╛)',
        'nav-child-protection': 'рдмрд╛рд▓ рд╕рдВрд░рдХреНрд╖рдг рд░ рд╢рд┐рдХреНрд╖рд╛',
        'nav-corruption': 'рднреНрд░рд╖реНрдЯрд╛рдЪрд╛рд░',
        'nav-corruption-how': 'ЁЯЗ│ЁЯЗ╡ рдиреЗрдкрд╛рд▓ рдХрд╕рд░реА рднреНрд░рд╖реНрдЯ рд░рд╛рд╖реНрдЯреНрд░ рдмрдиреНрджреИ рдЧрдпреЛ? ЁЯХ│я╕П',
        'nav-corruption-wealth': 'ЁЯЪл рдиреЗрддрд╛рдХреЛ рд╕рдореНрдкрддреНрддрд┐',
        'nav-corruption-stop': 'ЁЯЪл рднреНрд░рд╖реНрдЯрд╛рдЪрд╛рд░ рдЕрдиреНрддреНрдп рдЧрд░реНрдиреЗ',
        'nav-health': 'рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛ ЁЯй║',
        'nav-food': 'рдЖрд╣рд╛рд░ рд╕реБрдирд┐рд╢реНрдЪрд┐рдд',
        'nav-stop-corruption': 'ЁЯЪл рднреНрд░рд╖реНрдЯрд╛рдЪрд╛рд░ рдирд┐рдпрдиреНрддреНрд░рдг',
        'nav-contact': 'рд╕рдореНрдкрд░реНрдХ',
        'hero-title': 'рд╣рд┐рдорд╛рд▓рдХреЛ рднреВрдорд┐ рдиреЗрдкрд╛рд▓рдорд╛ рд╕реНрд╡рд╛рдЧрдд рдЫ ',
        'hero-subtitle': 'рдХрд┐рд░рд╛рдд рд░рд╛рдЬрд╡рдВрд╢рджреЗрдЦрд┐ рдЖрдзреБрдирд┐рдХ рд╕рдВрдШреАрдп рд▓реЛрдХрддрд╛рдиреНрддреНрд░рд┐рдХ рдЧрдгрддрдиреНрддреНрд░рд╕рдореНрдо рдиреЗрдкрд╛рд▓рдХреЛ рейрежрежреж рд╡рд░реНрд╖рдХреЛ рдЗрддрд┐рд╣рд╛рд╕рдХреЛ рд╕рдореГрджреНрдз рдкрд░рдореНрдкрд░рд╛ рдкрддреНрддрд╛ рд▓рдЧрд╛рдЙрдиреБрд╣реЛрд╕реНред рд╕рдЧрд░рдорд╛рдерд╛, рдмреБрджреНрдзрдХреЛ рдЬрдиреНрдорд╕реНрдерд╛рди, рд░ рд╡рд┐рд╡рд┐рдз рд╕рдВрд╕реНрдХреГрддрд┐, рдкрд░рдореНрдкрд░рд╛ рд░ рдкреНрд░рд╛рдХреГрддрд┐рдХ рдЖрд╢реНрдЪрд░реНрдпрд╣рд░реВрдХреЛ рдорд┐рд╢реНрд░рдгред',
        'nepal-title': 'рдиреЗрдкрд╛рд▓: рдкреНрд░рдХреГрддрд┐рдХреЛ рдЕрдореВрд▓реНрдп рдЙрдкрд╣рд╛рд░',
        'nepal-subtitle': 'рд╣рд┐рдорд╛рд▓, рдирджреА, рдЬрдВрдЧрд▓ рд░ рдЬреИрд╡рд┐рдХ рд╡рд┐рд╡рд┐рдзрддрд╛рдХреЛ рдзрдиреА - рдиреЗрдкрд╛рд▓рдХреЛ рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕рдореНрдкрджрд╛',
        'sector-nature': 'рез. рд╣рд┐рдорд╛рд▓ рд░ рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕реМрдиреНрджрд░реНрдп',
        'stat-peaks': 'рд╣рд┐рдорд╛рд▓реА рдЪреБрдЪреБрд░рд╛рд╣рд░реВ',
        'stat-peaks-desc': 'рео,режрежреж рдорд┐рдЯрд░ рднрдиреНрджрд╛ рдорд╛рдерд┐',
        'stat-parks': 'рд░рд╛рд╖реНрдЯреНрд░рд┐рдп рдирд┐рдХреБрдЮреНрдЬ',
        'stat-parks-desc': 'рд╕рдВрд░рдХреНрд╖рд┐рдд рдХреНрд╖реЗрддреНрд░',
        'stat-biodiversity': 'рдЬреИрд╡рд┐рдХ рд╡рд┐рд╡рд┐рдзрддрд╛',
        'stat-biodiversity-desc': 'рд╡рдирд╕реНрдкрддрд┐ рдкреНрд░рдЬрд╛рддрд┐',
        'nature-description': 'рдиреЗрдкрд╛рд▓ рдкреНрд░рдХреГрддрд┐рдХреЛ рдЕрдореВрд▓реНрдп рдЙрдкрд╣рд╛рд░ рд╣реЛред рдпрд╣рд╛рдБрдХреЛ рд╣рд┐рдорд╛рд▓, рдирджреА, рдЬрдВрдЧрд▓ рд░ рдЬреИрд╡рд┐рдХ рд╡рд┐рд╡рд┐рдзрддрд╛ рд╡рд┐рд╢реНрд╡рднрд░рдорд╛ рдЕрджреНрд╡рд┐рддреАрдп рдЫред рд╕рдЧрд░рдорд╛рдерд╛ (рдПрднрд░реЗрд╕реНрдЯ) рд╡рд┐рд╢реНрд╡рдХреЛ рд╕рдмреИрднрдиреНрджрд╛ рдЕрдЧреНрд▓реЛ рдЪреБрдЪреБрд░реЛ рд╣реЛ, рдЬрд╕рд▓реЗ рдиреЗрдкрд╛рд▓рдХреЛ рдЧреМрд░рд╡ рдмрдврд╛рдПрдХреЛ рдЫред',
        'nature-progress': 'резрежреж% рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕рдореНрдкрджрд╛',
        'nature-features': 'рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╡рд┐рд╢реЗрд╖рддрд╛рд╣рд░реВ',
        'nature-feature-1': 'рд╣рд┐рдорд╛рд▓реА рдкрд░реНрд╡рдд рд╢реНрд░реГрдВрдЦрд▓рд╛: рд╕рдЧрд░рдорд╛рдерд╛, рдХрдЮреНрдЪрдирдЬрдЩреНрдШрд╛, рдзреМрд▓рд╛рдЧрд┐рд░реА, рдЕрдиреНрдирдкреВрд░реНрдгрд╛',
        'nature-feature-2': 'рдкрд╡рд┐рддреНрд░ рддрд╛рд▓рд╣рд░реВ: рддрд┐рд▓рд┐рдЪреЛ, рд░рд╛рд░рд╛, рдлреЗрд╡рд╛, рдмреЗрдЧрдирд╛рд╕',
        'nature-feature-3': 'рд╡рд┐рд╢реНрд╡ рд╕рдореНрдкрджрд╛ рд╕реНрдерд▓: рд▓реБрдореНрдмрд┐рдиреА, рдЪрд┐рддрд╡рди рд░рд╛рд╖реНрдЯреНрд░рд┐рдп рдирд┐рдХреБрдЮреНрдЬ, рдХрд╛рдардорд╛рдбреМрдВ рдЙрдкрддреНрдпрдХрд╛',
        'nature-feature-4': 'рд╡рд┐рд╡рд┐рдз рдЬрд▓рд╡рд╛рдпреБ: рдЙрд╖реНрдг рдкреНрд░рджреЗрд╢рджреЗрдЦрд┐ рд╣рд┐рдорд╛рд▓реА рдХреНрд╖реЗрддреНрд░рд╕рдореНрдо',
        'nature-feature-5': 'рд╡рд┐рд╢реНрд╡ рдкреНрд░рд╕рд┐рджреНрдз рдЯреНрд░реЗрдХрд┐рдЩ рдорд╛рд░реНрдЧрд╣рд░реВ',
        'nature-special': 'рд╡рд┐рд╢реЗрд╖ рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╡рд┐рд╢реЗрд╖рддрд╛рд╣рд░реВ',
        'nature-special-1': 'рдХрд╛рд▓реАрдЧрдгреНрдбрдХреА рдЧреЛрд░реНрдЬ: рд╡рд┐рд╢реНрд╡рдХреЛ рд╕рдмреИрднрдиреНрджрд╛ рдЧрд╣рд┐рд░реЛ рдЧреЛрд░реНрдЬ',
        'nature-special-2': 'рд░рд╛рд░рд╛ рддрд╛рд▓: рдиреЗрдкрд╛рд▓рдХреЛ рд╕рдмреИрднрдиреНрджрд╛ рдареБрд▓реЛ рддрд╛рд▓',
        'nature-special-3': 'рдореБрд╕реНрддрд╛рдЩ: рдкреНрд░рд╛рдЪреАрди рддрд┐рдмреНрдмрддреА рд╕рдВрд╕реНрдХреГрддрд┐рдХреЛ рдЬреАрд╡рдиреНрдд рд╕рдВрдЧреНрд░рд╣рд╛рд▓рдп',
        'nature-special-4': 'рдЕрдиреНрдирдкреВрд░реНрдгрд╛ рд╕рдВрд░рдХреНрд╖рдг рдХреНрд╖реЗрддреНрд░: рд╡рд┐рд╢реНрд╡рдХреЛ рд╕рдмреИрднрдиреНрджрд╛ рдзреЗрд░реИ рдЯреНрд░реЗрдХрд░ рдЖрдЙрдиреЗ рдХреНрд╖реЗрддреНрд░',
        'footer-title': 'рдореЗрд░реЛ рдиреЗрдкрд╛рд▓',
        'footer-quote': '"рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕реНрд░реЛрддрд╣рд░реВ рдиреЗрдкрд╛рд▓рдХреЛ рдЕрдореВрд▓реНрдп рд╕рдореНрдкрддреНрддрд┐ рд╣реБрдиреН тАФ рд╕рдВрд░рдХреНрд╖рдг рд░ рд╡рд┐рд╡реЗрдХрдкреВрд░реНрдг рдЙрдкрдпреЛрдЧ рдиреИ рд╕рдореГрджреНрдзрд┐рдХреЛ рдмрд╛рдЯреЛ рд╣реЛред" ЁЯЗ│ЁЯЗ╡',
        'footer-description': 'рдиреЗрдкрд╛рд▓ рдПрдХ рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕реНрд░реЛрддрд╣рд░реВрд▓реЗ рднрд░рд┐рдкреВрд░реНрдг рд╕реБрдиреНрджрд░ рджреЗрд╢ рд╣реЛред рд╣рд┐рдорд╛рд▓, рдирджреА, рдЬрдВрдЧрд▓, рдЦрдирд┐рдЬ, рдЬрд▓рд╕реНрд░реЛрдд, рд╡рдиреНрдпрдЬрдиреНрддреБ рд░ рдЬреИрд╡рд┐рдХ рд╡рд┐рд╡рд┐рдзрддрд╛ рдиреЗрдкрд╛рд▓рдХреЛ рд╕рдмреИрднрдиреНрджрд╛ рдорд╣рддреНрд╡рдкреВрд░реНрдг рд╕рдореНрдкрддреНрддрд┐ рд╣реБрдиреНред',
        'footer-design': 'рд╕реБрдмрд╛рд╢рджреНрд╡рд╛рд░рд╛ тЭдя╕П рд╕рдВрдЧ рдбрд┐рдЬрд╛рдЗрди рдЧрд░рд┐рдПрдХреЛ',
        'footer-copyright': ' рдиреНрдпреБрдЬ--рд╡рд╛рд░ред рд╕рд░реНрд╡рд╛рдзрд┐рдХрд╛рд░ рд╕реБрд░рдХреНрд╖рд┐рддред',
        'nepal-hope-title': 'рез. рдиреЗрдкрд╛рд▓рдХреЛ рдЖрд╢рд╛ рд░ рднрд╡рд┐рд╖реНрдпрдХреЛ рджрд┐рд╢рд╛',
        'nepal-opportunities-title': 'реи. рд╡рд┐рдХрд╛рд╕рдХреЛ рдЕрд╡рд╕рд░рд╣рд░реВ',
        'nepal-education-title': 'рей. рд╢рд┐рдХреНрд╖рд╛ рд░ рдХреНрд╖рдорддрд╛ рд╡рд┐рдХрд╛рд╕',
        'nepal-health-title': 'рек. рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛ рд░ рдХрд▓реНрдпрд╛рдг',
        'nepal-culture-title': 'рел. рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рд╡рд┐рд░рд╛рд╕рдд рд░ рдкрд░реНрдпрдЯрди'
    },
    hindi: {
        'page-title': 'рдореЗрд░реА рдпреЛрдЬрдирд╛-- Hami-Nepali | Plan Nepal--рдиреЗрдкрд╛рд▓ рдпреЛрдЬрдирд╛',
        'login-title': 'рд▓реЙрдЧ рдЗрди',
        'login-button': 'рд▓реЙрдЧ рдЗрди',
        'register-title': 'рдкрдВрдЬреАрдХрд░рдг',
        'register-button': 'рдкрдВрдЬреАрдХрд░рдг',
        'social-login-title': 'рд╕рд╛рдорд╛рдЬрд┐рдХ рд▓реЙрдЧ рдЗрди',
        'google-login': 'рдЧреВрдЧрд▓ рд╕реЗ рд▓реЙрдЧ рдЗрди рдХрд░реЗрдВ',
        'facebook-login': 'рдлреЗрд╕рдмреБрдХ рд╕реЗ рд▓реЙрдЧ рдЗрди рдХрд░реЗрдВ',
        'nav-home': 'ЁЯЗ│ЁЯЗ╡ рдореЗрд░рд╛ рдиреЗрдкрд╛рд▓ ЁЯЗ│ЁЯЗ╡',
        'nav-beauty': 'ЁЯМИ рд╕реМрдВрджрд░реНрдп рджреГрд╖реНрдЯрд┐ рдореЗрдВ рд╣реИ',
        'nav-positivity': 'ЁЯЗ│ЁЯЗ╡ рдиреЗрдкрд╛рд▓ рдХреА рд╕рдХрд╛рд░рд╛рддреНрдордХрддрд╛ ЁЯМ╕',
        'nav-hope': 'ЁЯХКя╕П рд▓реЗрдХрд┐рди рдЙрдореНрдореАрдж рдмрд╛рдХреА рд╣реИ',
        'nav-youth': 'ЁЯСйтАНЁЯОУ рд╢рд┐рдХреНрд╖рд┐рдд рдФрд░ рдХреБрд╢рд▓ рдпреБрд╡рд╛',
        'nav-plan': 'ЁЯОп рдореЗрд░реА рдпреЛрдЬрдирд╛',
        'nav-education': 'ЁЯУЪ рд╢рд┐рдХреНрд╖рд╛ рдпреЛрдЬрдирд╛',
        'nav-jobs': 'рд░реЛрдЬрдЧрд╛рд░ рдЙрдкрд▓рдмреНрдз',
        'nav-homes': 'ЁЯПа рдЖрд╡рд╛рд╕ рдФрд░ рд╢реИрдХреНрд╖рд┐рдХ рд╕реБрд╡рд┐рдзрд╛рдПрдВ',
        'nav-child-protection': 'рдмрд╛рд▓ рд╕рдВрд░рдХреНрд╖рдг рдФрд░ рд╢рд┐рдХреНрд╖рд╛',
        'nav-corruption': 'рднреНрд░рд╖реНрдЯрд╛рдЪрд╛рд░',
        'nav-corruption-how': 'ЁЯЗ│ЁЯЗ╡ рдиреЗрдкрд╛рд▓ рдХреИрд╕реЗ рднреНрд░рд╖реНрдЯ рд░рд╛рд╖реНрдЯреНрд░ рдмрдирд╛? ЁЯХ│я╕П',
        'nav-corruption-wealth': 'ЁЯЪл рдиреЗрддрд╛рдУрдВ рдХреА рд╕рдВрдкрддреНрддрд┐',
        'nav-corruption-stop': 'ЁЯЪл рднреНрд░рд╖реНрдЯрд╛рдЪрд╛рд░ рд╕рдорд╛рдкреНрдд рдХрд░реЗрдВ',
        'nav-health': 'рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛ ЁЯй║',
        'nav-food': 'рдЦрд╛рджреНрдп рд╕реБрд░рдХреНрд╖рд╛',
        'nav-stop-corruption': 'ЁЯЪл рднреНрд░рд╖реНрдЯрд╛рдЪрд╛рд░ рдирд┐рдпрдВрддреНрд░рдг',
        'nav-contact': 'рд╕рдВрдкрд░реНрдХ',
        'hero-title': 'рд╣рд┐рдорд╛рд▓рдп рдХреА рднреВрдорд┐ рдиреЗрдкрд╛рд▓ рдореЗрдВ рдЖрдкрдХрд╛ рд╕реНрд╡рд╛рдЧрдд рд╣реИ ',
        'hero-subtitle': 'рдХрд┐рд░рд╛рдд рд░рд╛рдЬрд╡рдВрд╢ рд╕реЗ рдЖрдзреБрдирд┐рдХ рд╕рдВрдШреАрдп рд▓реЛрдХрддрд╛рдВрддреНрд░рд┐рдХ рдЧрдгрд░рд╛рдЬреНрдп рддрдХ рдиреЗрдкрд╛рд▓ рдХреЗ 3000 рд╡рд░реНрд╖ рдХреЗ рдЗрддрд┐рд╣рд╛рд╕ рдХреА рд╕рдореГрджреНрдз рдкрд░рдВрдкрд░рд╛ рдХрд╛ рдЕрдиреНрд╡реЗрд╖рдг рдХрд░реЗрдВред рдорд╛рдЙрдВрдЯ рдПрд╡рд░реЗрд╕реНрдЯ, рдмреБрджреНрдз рдХреА рдЬрдиреНрдорднреВрдорд┐, рдФрд░ рд╡рд┐рд╡рд┐рдз рд╕рдВрд╕реНрдХреГрддрд┐рдпреЛрдВ, рдкрд░рдВрдкрд░рд╛рдУрдВ рдФрд░ рдкреНрд░рд╛рдХреГрддрд┐рдХ рдЖрд╢реНрдЪрд░реНрдпреЛрдВ рдХрд╛ рдорд┐рд╢реНрд░рдгред',
        'nepal-title': 'рдиреЗрдкрд╛рд▓: рдкреНрд░рдХреГрддрд┐ рдХрд╛ рдЕрдирдореЛрд▓ рдЙрдкрд╣рд╛рд░',
        'nepal-subtitle': 'рдкрд░реНрд╡рдд, рдирджрд┐рдпреЛрдВ, рдЬрдВрдЧрд▓реЛрдВ рдФрд░ рдЬреИрд╡ рд╡рд┐рд╡рд┐рдзрддрд╛ рд╕реЗ рд╕рдореГрджреНрдз - рдиреЗрдкрд╛рд▓ рдХреЗ рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕рдВрд╕рд╛рдзрди',
        'sector-nature': 'рез. рдкрд░реНрд╡рдд рдФрд░ рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕реМрдВрджрд░реНрдп',
        'stat-peaks': 'рд╣рд┐рдорд╛рд▓рдпрди рдЪреЛрдЯрд┐рдпрд╛рдВ',
        'stat-peaks-desc': 'рео,режрежреж рдореАрдЯрд░ рд╕реЗ рдКрдкрд░',
        'stat-parks': 'рд░рд╛рд╖реНрдЯреНрд░реАрдп рдЙрджреНрдпрд╛рди',
        'stat-parks-desc': 'рд╕рдВрд░рдХреНрд╖рд┐рдд рдХреНрд╖реЗрддреНрд░',
        'stat-biodiversity': 'рдЬреИрд╡ рд╡рд┐рд╡рд┐рдзрддрд╛',
        'stat-biodiversity-desc': 'рдкрд╛рджрдк рдкреНрд░рдЬрд╛рддрд┐рдпрд╛рдВ',
        'nature-description': 'рдиреЗрдкрд╛рд▓ рдкреНрд░рдХреГрддрд┐ рдХрд╛ рдЕрдирдореЛрд▓ рдЙрдкрд╣рд╛рд░ рд╣реИред рдЗрд╕рдХреЗ рдкрд░реНрд╡рдд, рдирджрд┐рдпрд╛рдВ, рдЬрдВрдЧрд▓ рдФрд░ рдЬреИрд╡ рд╡рд┐рд╡рд┐рдзрддрд╛ рд╡рд┐рд╢реНрд╡ рдореЗрдВ рдЕрджреНрд╡рд┐рддреАрдп рд╣реИрдВред рд╕рд╛рдЧрд░рдорд╛рдерд╛ (рдПрд╡рд░реЗрд╕реНрдЯ) рд╡рд┐рд╢реНрд╡ рдХреА рд╕рдмрд╕реЗ рдКрдВрдЪреА рдЪреЛрдЯреА рд╣реИ, рдЬрд┐рд╕рдиреЗ рдиреЗрдкрд╛рд▓ рдХреА рдЧреМрд░рд╡ рдХреЛ рдмрдврд╝рд╛рдпрд╛ рд╣реИред',
        'nature-progress': 'резрежреж% рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕рдВрд╕рд╛рдзрди',
        'nature-features': 'рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╡рд┐рд╢реЗрд╖рддрд╛рдПрдВ',
        'nature-feature-1': 'рд╣рд┐рдорд╛рд▓рдпрди рдкрд░реНрд╡рдд рд╢реНрд░реГрдВрдЦрд▓рд╛: рд╕рд╛рдЧрд░рдорд╛рдерд╛, рдХрдВрдЪрдирдЬрдВрдШрд╛, рдзреМрд▓рд╛рдЧрд┐рд░реА, рдЕрдиреНрдирдкреВрд░реНрдгрд╛',
        'nature-feature-2': 'рдкрд╡рд┐рддреНрд░ рдЭреАрд▓реЗрдВ: рддрд┐рд▓рд┐рдЪреЛ, рд░рд╛рд░рд╛, рдлреЗрд╡рд╛, рдмреЗрдЧрдирд╛рд╕',
        'nature-feature-3': 'рд╡рд┐рд╢реНрд╡ рд╡рд┐рд░рд╛рд╕рдд рд╕реНрдерд▓: рд▓реБрдВрдмрд┐рдиреА, рдЪрд┐рддрд╡рди рд░рд╛рд╖реНрдЯреНрд░реАрдп рдЙрджреНрдпрд╛рди, рдХрд╛рдардорд╛рдВрдбреВ рдШрд╛рдЯреА',
        'nature-feature-4': 'рд╡рд┐рд╡рд┐рдз рдЬрд▓рд╡рд╛рдпреБ: рдЙрд╖реНрдгрдХрдЯрд┐рдмрдВрдзреАрдп рд╕реЗ рд╣рд┐рдорд╛рд▓рдпреА рдХреНрд╖реЗрддреНрд░ рддрдХ',
        'nature-feature-5': 'рд╡рд┐рд╢реНрд╡ рдкреНрд░рд╕рд┐рджреНрдз рдЯреНрд░реЗрдХрд┐рдВрдЧ рдорд╛рд░реНрдЧ',
        'nature-special': 'рд╡рд┐рд╢реЗрд╖ рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╡рд┐рд╢реЗрд╖рддрд╛рдПрдВ',
        'nature-special-1': 'рдХрд╛рд▓реА рдЧрдВрдбрдХреА рдЧреЙрд░реНрдЬ: рд╡рд┐рд╢реНрд╡ рдХреА рд╕рдмрд╕реЗ рдЧрд╣рд░реА рдЧреЙрд░реНрдЬ',
        'nature-special-2': 'рд░рд╛рд░рд╛ рдЭреАрд▓: рдиреЗрдкрд╛рд▓ рдХреА рд╕рдмрд╕реЗ рдмрдбрд╝реА рдЭреАрд▓',
        'nature-special-3': 'рдореБрд╕реНрддрд╛рдВрдЧ: рдкреНрд░рд╛рдЪреАрди рддрд┐рдмреНрдмрддреА рд╕рдВрд╕реНрдХреГрддрд┐ рдХрд╛ рдЬреАрд╡рдВрдд рд╕рдВрдЧреНрд░рд╣рд╛рд▓рдп',
        'nature-special-4': 'рдЕрдиреНрдирдкреВрд░реНрдгрд╛ рд╕рдВрд░рдХреНрд╖рдг рдХреНрд╖реЗрддреНрд░: рд╡рд┐рд╢реНрд╡ рдХрд╛ рд╕рдмрд╕реЗ рдЕрдзрд┐рдХ рдЯреНрд░реЗрдХрд░ рдЖрдиреЗ рд╡рд╛рд▓рд╛ рдХреНрд╖реЗрддреНрд░',
        'footer-title': 'рдореЗрд░рд╛ рдиреЗрдкрд╛рд▓',
        'footer-quote': '"рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕рдВрд╕рд╛рдзрди рдиреЗрдкрд╛рд▓ рдХреЗ рдЕрдирдореЛрд▓ рд╕рдВрдкрддреНрддрд┐ рд╣реИрдВ тАФ рд╕рдВрд░рдХреНрд╖рдг рдФрд░ рд╡рд┐рд╡реЗрдХрдкреВрд░реНрдг рдЙрдкрдпреЛрдЧ рд╣реА рд╕рдореГрджреНрдзрд┐ рдХрд╛ рдорд╛рд░реНрдЧ рд╣реИред" ЁЯЗ│ЁЯЗ╡',
        'footer-description': 'рдиреЗрдкрд╛рд▓ рдкреНрд░рд╛рдХреГрддрд┐рдХ рд╕рдВрд╕рд╛рдзрдиреЛрдВ рд╕реЗ рд╕рдореГрджреНрдз рдПрдХ рд╕реБрдВрджрд░ рджреЗрд╢ рд╣реИред рдкрд░реНрд╡рдд, рдирджрд┐рдпрд╛рдВ, рдЬрдВрдЧрд▓, рдЦрдирд┐рдЬ, рдЬрд▓ рд╕рдВрд╕рд╛рдзрди, рд╡рдиреНрдпрдЬреАрд╡ рдФрд░ рдЬреИрд╡ рд╡рд┐рд╡рд┐рдзрддрд╛ рдиреЗрдкрд╛рд▓ рдХреА рд╕рдмрд╕реЗ рдорд╣рддреНрд╡рдкреВрд░реНрдг рд╕рдВрдкрддреНрддрд┐ рд╣реИрдВред',
        'footer-design': 'рд╕реБрдмрд╛рд╢ рджреНрд╡рд╛рд░рд╛ тЭдя╕П рдХреЗ рд╕рд╛рде рдбрд┐рдЬрд╝рд╛рдЗрди рдХрд┐рдпрд╛ рдЧрдпрд╛',
        'footer-copyright': ' рдиреНрдпреВрдЬ--рд╡рд╛рд░ ред рд╕рд░реНрд╡рд╛рдзрд┐рдХрд╛рд░ рд╕реБрд░рдХреНрд╖рд┐рддред',
        'nepal-hope-title': 'рез. рдиреЗрдкрд╛рд▓ рдХреА рдЖрд╢рд╛ рдФрд░ рднрд╡рд┐рд╖реНрдп рдХреА рджрд┐рд╢рд╛',
        'nepal-opportunities-title': 'реи. рд╡рд┐рдХрд╛рд╕ рдХреЗ рдЕрд╡рд╕рд░',
        'nepal-education-title': 'рей. рд╢рд┐рдХреНрд╖рд╛ рдФрд░ рдХреНрд╖рдорддрд╛ рд╡рд┐рдХрд╛рд╕',
        'nepal-health-title': 'рек. рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛ рдФрд░ рдХрд▓реНрдпрд╛рдг',
        'nepal-culture-title': 'рел. рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рд╡рд┐рд░рд╛рд╕рдд рдФрд░ рдкрд░реНрдпрдЯрди'
    }
};

function switchLanguage(language) {
    // Hide all language content
    document.querySelectorAll('.nepali-content, .english-content, .hindi-content').forEach(el => {
        el.style.display = 'none';
    });

    // Show selected language content
    document.querySelectorAll(`.${language}-content`).forEach(el => {
        el.style.display = 'block';
    });

    // Update navigation items
    document.querySelectorAll('[data-i18n]').forEach(el => {
        const key = el.getAttribute('data-i18n');
        if (translations[language] && translations[language][key]) {
            el.textContent = translations[language][key];
        }
    });

    // Update nepal-sector titles
    document.querySelectorAll('.nepal-sector-title').forEach(el => {
        const key = el.getAttribute('data-i18n');
        if (key && translations[language] && translations[language][key]) {
            el.textContent = translations[language][key];
        }
    });

    // Update language selector
    document.querySelector('.language-selector').value = language;

    // Store the language preference
    localStorage.setItem('preferredLanguage', language);
}

// Set initial language based on stored preference or default to Nepali
document.addEventListener('DOMContentLoaded', () => {
    const storedLanguage = localStorage.getItem('preferredLanguage') || 'nepali';
    switchLanguage(storedLanguage);
});

function toggleMenu() {
    const navLinks = document.querySelector('.nav-links');
    navLinks.classList.toggle('active');
    if (activeDropdown) {
        hideDropdown(activeDropdown);
    }
}

function toggleSideMenu() {
    const sideMenu = document.getElementById('side-menu');
    const backdrop = document.getElementById('side-menu-backdrop');
    sideMenu.classList.toggle('active');
    backdrop.classList.toggle('active');
}

function showDropdown(dropdownId) {
    if (activeDropdown === dropdownId) return;
    if (activeDropdown) {
        hideDropdown(activeDropdown);
    }
    const dropdown = document.getElementById(dropdownId);
    const backdrop = document.getElementById('dropdown-backdrop');
    if (dropdown) {
        dropdown.classList.add('active');
        backdrop.classList.add('active');
        document.getElementById('navbar').classList.add('active');
        activeDropdown = dropdownId;

        // Animate dropdown items
        const items = dropdown.querySelectorAll('.dropdown-item');
        items.forEach((item, index) => {
            setTimeout(() => {
                item.classList.add('animate');
            }, index * 100);
        });
    }
}

function hideDropdown(dropdownId) {
    const dropdown = document.getElementById(dropdownId);
    const backdrop = document.getElementById('dropdown-backdrop');
    if (dropdown) {
        dropdown.classList.remove('active');
        backdrop.classList.remove('active');
        document.getElementById('navbar').classList.remove('active');
        activeDropdown = null;

        // Reset animation for dropdown items
        const items = dropdown.querySelectorAll('.dropdown-item');
        items.forEach(item => {
            item.classList.remove('animate');
        });
    }
}

function handleLogin(event) {
    event.preventDefault();
    const email = document.getElementById('login-email').value;
    const password = document.getElementById('login-password').value;
    const messageDiv = document.getElementById('login-message');

    // Basic validation
    if (!/^\S+@\S+\.\S+$/.test(email)) {
        messageDiv.className = 'error';
        messageDiv.textContent = 'Please enter a valid email.';
        return;
    }
    if (password.length < 6) {
        messageDiv.className = 'error';
        messageDiv.textContent = 'Password must be at least 6 characters.';
        return;
    }

    // Mock login success
    messageDiv.className = 'success';
    messageDiv.textContent = 'Login successful!';
    document.getElementById('login-form').reset();
    setTimeout(() => {
        toggleSideMenu();
        messageDiv.textContent = '';
    }, 1500);
}

function handleRegister(event) {
    event.preventDefault();
    const username = document.getElementById('register-username').value;
    const email = document.getElementById('register-email').value;
    const password = document.getElementById('register-password').value;
    const confirmPassword = document.getElementById('register-confirm-password').value;
    const messageDiv = document.getElementById('register-message');

    // Basic validation
    if (username.length < 3) {
        messageDiv.className = 'error';
        messageDiv.textContent = 'Username must be at least 3 characters.';
        return;
    }
    if (!/^\S+@\S+\.\S+$/.test(email)) {
        messageDiv.className = 'error';
        messageDiv.textContent = 'Please enter a valid email.';
        return;
    }
    if (password.length < 6) {
        messageDiv.className = 'error';
        messageDiv.textContent = 'Password must be at least 6 characters.';
        return;
    }
    if (password !== confirmPassword) {
        messageDiv.className = 'error';
        messageDiv.textContent = 'Passwords do not match.';
        return;
    }

    // Mock register success
    messageDiv.className = 'success';
    messageDiv.textContent = 'Registration successful!';
    document.getElementById('register-form').reset();
    setTimeout(() => {
        toggleSideMenu();
        messageDiv.textContent = '';
    }, 1500);
}

// Smooth scroll for anchor links
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const targetId = this.getAttribute('href');
        const targetElement = document.querySelector(targetId);
        if (targetElement) {
            targetElement.scrollIntoView({
                behavior: 'smooth'
            });
        }
        if (activeDropdown) {
            hideDropdown(activeDropdown);
        }
        if (window.innerWidth <= 768) {
            toggleMenu();
        }
    });
});

// Handle dropdown interactions
document.querySelectorAll('.nav-link').forEach(link => {
    const dropdownId = link.getAttribute('data-dropdown');
    if (window.innerWidth > 768) {
        link.addEventListener('mouseenter', () => showDropdown(dropdownId));
        link.addEventListener('mouseleave', () => setTimeout(() => {
            if (!document.querySelector(`#${dropdownId}:hover`)) {
                hideDropdown(dropdownId);
            }
        }, 300));
        document.getElementById(dropdownId).addEventListener('mouseenter', () => {
            showDropdown(dropdownId);
        });
        document.getElementById(dropdownId).addEventListener('mouseleave', () => {
            hideDropdown(dropdownId);
        });
    } else {
        link.addEventListener('click', (e) => {
            e.preventDefault();
            showDropdown(dropdownId);
        });
    }
});

// Close dropdown when clicking backdrop
document.getElementById('dropdown-backdrop').addEventListener('click', () => {
    if (activeDropdown) {
        hideDropdown(activeDropdown);
    }
});

// Close side menu when clicking backdrop
document.getElementById('side-menu-backdrop').addEventListener('click', () => {
    toggleSideMenu();
});

// Show more details (simulated)
function showMore(sectorId) {
    const sector = document.getElementById(sectorId);
    const newContent = document.createElement("div");
    newContent.innerHTML = `
        <h3 style="margin-top:20px;color:#1a5276">рдЕрддрд┐рд░рд┐рдХреНрдд рд╡рд┐рд╡рд░рдг</h3>
        <p>рдпрд╕ рдпреЛрдЬрдирд╛рдХреЛ рдХрд╛рд░реНрдпрд╛рдиреНрд╡рдпрдирдХрд╛ рд▓рд╛рдЧрд┐ рдирд┐рдореНрди рдХрджрдорд╣рд░реВ рдЕрдкрдирд╛рдЗрдиреЗрдЫ:</p>
        <ul>
            <li>рддреНрд░реИрдорд╛рд╕рд┐рдХ рдкреНрд░рдЧрддрд┐ рдореВрд▓реНрдпрд╛рдЩреНрдХрди</li>
            <li>рд╕реНрдерд╛рдиреАрдп рд╕рд░рдХрд╛рд░ рд╕рдВрдЧ рд╕рдордиреНрд╡рдп</li>
            <li>рдирд┐рдЬреАрдХреНрд╖реЗрддреНрд░рдХреЛ рд╕рд╣рднрд╛рдЧрд┐рддрд╛</li>
        </ul>
        <button class="btn" onclick="closeDetails(this)">рдмрдиреНрдж рдЧрд░реНрдиреБрд╣реЛрд╕реН</button>
    `;
    sector.appendChild(newContent);
}

function closeDetails(button) {
    button.parentElement.remove();
}

// Initialize - animate first sector
document.addEventListener("DOMContentLoaded", function() {
    // Open first sector by default
    document.querySelector(".sector h2").click();
    
    // Add animation to list items
    const items = document.querySelectorAll("li");
    items.forEach((item, index) => {
        item.style.animation = `fadeIn 0.5s ease ${index * 0.1}s forwards`;
        item.style.opacity = "0";
    });
});

// Fade-in animation for sections
const sections = document.querySelectorAll('.section-hidden');
const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.classList.add('section-visible');
            observer.unobserve(entry.target);
        }
    });
}, { threshold: 0.2 });

sections.forEach(section => observer.observe(section));

// Toggle detailed content
const buttons = document.querySelectorAll('.btn-animate');
buttons.forEach(button => {
    button.addEventListener('click', () => {
        const content = button.nextElementSibling;
        content.classList.toggle('open');
    });
});

function toggleNepalSector(contentId) {
    const content = document.getElementById(contentId);
    const icon = content.previousElementSibling.querySelector('.nepal-toggle-icon');
    
    // Toggle content visibility
    content.classList.toggle('nepal-content-active');
    
    // Toggle icon
    icon.textContent = content.classList.contains('nepal-content-active') ? 'тИТ' : '+';
    
    // Animate action items if content is being shown
    if (content.classList.contains('nepal-content-active')) {
        const actionItems = content.querySelectorAll('.nepal-action-item');
        actionItems.forEach((item, index) => {
            setTimeout(() => {
                item.classList.add('animate');
            }, index * 100);
        });
        
        // Animate progress bar if it exists
        const progressBar = content.querySelector('.nepal-progress-bar');
        if (progressBar) {
            animateNepalProgressBar(progressBar.id);
        }
    } else {
        // Remove animation classes when hiding
        const actionItems = content.querySelectorAll('.nepal-action-item');
        actionItems.forEach(item => {
            item.classList.remove('animate');
        });
    }
}

function animateNepalProgressBar(progressId) {
    const progressBar = document.getElementById(progressId);
    if (!progressBar) return;
    
    const targetWidth = progressBar.getAttribute('data-progress') || '100%';
    progressBar.style.width = '0%';
    
    setTimeout(() => {
        progressBar.style.width = targetWidth;
    }, 100);
}

// Add hover effect for action items
document.addEventListener('DOMContentLoaded', function() {
    const actionItems = document.querySelectorAll('.nepal-action-item');
    
    actionItems.forEach(item => {
        item.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-5px)';
            this.style.boxShadow = '0 6px 20px rgba(0, 0, 0, 0.15)';
        });
        
        item.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0)';
            this.style.boxShadow = '0 2px 10px rgba(0, 0, 0, 0.05)';
        });
    });
    
    // Initialize first sector
    const firstSector = document.querySelector('.nepal-sector');
    if (firstSector) {
        const contentId = firstSector.querySelector('.nepal-sector-content').id;
        toggleNepalSector(contentId);
    }
});

function handleFormSubmit(event) {
    event.preventDefault();
    
    const formData = {
        name: document.getElementById('name').value,
        email: document.getElementById('email').value,
        subject: document.getElementById('subject').value,
        message: document.getElementById('message').value
    };

    // Here you would typically send the form data to your server
    // For now, we'll just show a success message
    alert('рдзрдиреНрдпрд╡рд╛рдж! рддрдкрд╛рдИрдВрдХреЛ рд╕рдиреНрджреЗрд╢ рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдкрдард╛рдЗрдпреЛред');
    
    // Reset the form
    document.getElementById('contactForm').reset();
}

document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contactForm');
    
    form.addEventListener('submit', function(e) {
        // Clear previous errors
        clearErrors();
        
        // Validate form
        if (!validateForm()) {
            e.preventDefault();
        }
    });
    
    function validateForm() {
        let isValid = true;
        
        // Validate name
        const name = document.getElementById('name');
        if (name.value.trim() === '') {
            showError(name, 'рдХреГрдкрдпрд╛ рдЖрдлреНрдиреЛ рдирд╛рдо рд▓реЗрдЦреНрдиреБрд╣реЛрд╕реН');
            isValid = false;
        }
        
        // Validate email
        const email = document.getElementById('email');
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (email.value.trim() === '') {
            showError(email, 'рдХреГрдкрдпрд╛ рдЗрдореЗрд▓ рдареЗрдЧрд╛рдирд╛ рд▓реЗрдЦреНрдиреБрд╣реЛрд╕реН');
            isValid = false;
        } else if (!emailRegex.test(email.value)) {
            showError(email, 'рдХреГрдкрдпрд╛ рд╡реИрдз рдЗрдореЗрд▓ рдареЗрдЧрд╛рдирд╛ рд▓реЗрдЦреНрдиреБрд╣реЛрд╕реН');
            isValid = false;
        }
        
        // Validate subject
        const subject = document.getElementById('subject');
        if (subject.value === '') {
            showError(subject, 'рдХреГрдкрдпрд╛ рд╡рд┐рд╖рдп рдЫрд╛рдиреНрдиреБрд╣реЛрд╕реН');
            isValid = false;
        }
        
        // Validate message
        const message = document.getElementById('message');
        if (message.value.trim() === '') {
            showError(message, 'рдХреГрдкрдпрд╛ рд╕рдиреНрджреЗрд╢ рд▓реЗрдЦреНрдиреБрд╣реЛрд╕реН');
            isValid = false;
        } else if (message.value.trim().length < 10) {
            showError(message, 'рд╕рдиреНрджреЗрд╢ рдзреЗрд░реИ рдЫреЛрдЯреЛ рдЫ (рдХрдореНрддрд┐рдорд╛ резреж рдЕрдХреНрд╖рд░)');
            isValid = false;
        }
        
        return isValid;
    }
    
    function showError(input, message) {
        const formGroup = input.parentElement;
        const errorElement = document.createElement('div');
        errorElement.className = 'error';
        errorElement.textContent = message;
        formGroup.appendChild(errorElement);
        input.style.borderColor = '#e74c3c';
    }
    
    function clearErrors() {
        const errors = document.querySelectorAll('.error');
        errors.forEach(error => error.remove());
        
        const inputs = document.querySelectorAll('input, select, textarea');
        inputs.forEach(input => {
            input.style.borderColor = '#ddd';
        });
    }
});

